const bcrypt = require('bcrypt');

const handleNewUser = async (req, res) => {
  const { user, pwd } = req.body;
  if (!user || !pwd) {
    return res.status(400).json({ message: 'Username and password are required' });
  }

  // Check if the username is already taken
  db.query('SELECT * FROM users WHERE username = ?', [user], async (err, results) => {
    if (err) {
      console.error('Error querying the database: ', err);
      return res.status(500).json({ message: 'Internal server error' });
    }

    if (results.length > 0) {
      return res.status(409).json({ message: 'Username already taken' });
    }

    // Encrypt the password
    const hashedPwd = await bcrypt.hash(pwd, 10);

    // Store the new user in the database
    const newUser = { username: user, password: hashedPwd };
    db.query('INSERT INTO users SET ?', newUser, (err, result) => {
      if (err) {
        console.error('Error inserting new user into database: ', err);
        return res.status(500).json({ message: 'Internal server error' });
      }

      console.log('New user created: ', newUser);
      res.status(201).json({ success: `New user ${user} created!` });
    });
  });
};